<!--Author: Ryan Pinkney

This is my project blazor page-->
@page "/admin/books"
@page "/admin/"
@inherits OwningComponentBase<iBookstoreRepository>

<table class="table table-sm table-striped table-bordered">


    <thead>
        <tr>
            <th>Project Id</th>
            <th>Project Name</th>
            <th>Regional Program</th>
        </tr>
    </thead>
    <tbody>
        @if (BookData?.Count() > 0)
        {
            @foreach (Book p in BookData)
            {
                <tr>
                    <td>@p.Book</td>
                    <td>@p.ProjectName</td>
                    <td>@p.ProjectRegionalProgram</td>

                    <!--Details Button-->
                    <td>
                        <NavLink class="btn btn-info btn-sm" href="@GetDetailsUrl(p.ProjectId)">Details</NavLink>
                    </td>

                    <!--Edit button-->
                    <td>
                        <NavLink class="btn btn-warning btn-sm" href="@GetEditUrl(p.ProjectId)">Edit</NavLink>
                    </td>

                    <!--Delete button-->
                    <td>
                        <button class="btn btn-danger btn-sm" @onclick="@(x => RemoveProject(p))">Delete</button>
                    </td>



                </tr>

            }

        }
        else
        {
        <td colspan="5" class="text-center">No Projects</td>
    }
        </tbody>
    </table>


    <!--Button to create a project-->
    <NavLink class="btn btn-primary" href="admin/projects/create">Create</NavLink>


    @code {


        public iBookstoreRepository repo => Service;

        public IEnumerable<Books> BookData { get; set; }

        protected async override Task OnInitializedAsync()
        {
            await UpdateData();
        }

        public async Task UpdateData()
        {
            BookData = await repo.Books.ToListAsync();
        }

        public string GetDetailsUrl(long id) => $"/admin/books/details/{id}";

        public string GetEditUrl(long id) => $"/admin/books/edit/{id}";

        public async Task RemoveProject(Books p)
        {
            repo.DeleteBook(p);
            await UpdateData();
        }


    }
